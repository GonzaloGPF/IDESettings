<templateSet group="PHP">
  <template name="testclass" value="&lt;?php&#10;&#10;namespace Tests\Feature;&#10;&#10;use Illuminate\Foundation\Testing\RefreshDatabase;&#10;use Tests\TestCase;&#10;&#10;class $CLASS$ extends TestCase&#10;{&#10;    use RefreshDatabase;&#10;&#10;    /** @test */&#10;    function it_$METHOD$()&#10;    {&#10;        $END$&#10;    }&#10;}" description="A  test class template (Feature)" toReformat="false" toShortenFQNames="true">
    <variable name="CLASS" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="true" />
    <variable name="METHOD" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="testf" value="/** @test */&#10;function it_$METHOD$()&#10;{&#10;    $END$&#10;}" description="A test function" toReformat="false" toShortenFQNames="true">
    <variable name="METHOD" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="weh" value="$this-&gt;withoutExceptionHandling();" description="Without Exception Handling" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="filterclass" value="&lt;?php&#10;&#10;namespace App\Filters;&#10;&#10;use Illuminate\Database\Eloquent\Builder;&#10;&#10;class $NAME$ extends Filter&#10;{&#10;    /**&#10;     * @var array. Applicable filters by request's query strings. Every filter will be use by Filter class.&#10;     * Filter class will look for a method with the same name of the filter.&#10;     */&#10;    protected $filters = ['$ATTRIBUTE$'];&#10;&#10;    /**&#10;     * @param $ATTRIBUTE$&#10;     * @return Builder&#10;     */&#10;    protected function $ATTRIBUTE$($ATTRIBUTE$)&#10;    {&#10;        return $this-&gt;builder-&gt;where('$ATTRIBUTE$', $ATTRIBUTE$);&#10;    }&#10;}" description="Boilderplate for a Filter class creation" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="ATTRIBUTE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="storef" value="/**&#10; * Store a newly created resource in storage.&#10; *&#10; * @param  \Illuminate\Http\Request  $request&#10; * @return \Illuminate\Http\JsonResponse&#10; */&#10;public function store(Request $request)&#10;{&#10;    return ApiResponse::sendResource(Response::HTTP_CREATED, $this-&gt;message('$MODEL$', 'created'), $END$);&#10;}" description="Store function boilerplate" toReformat="false" toShortenFQNames="true">
    <variable name="MODEL" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Class Member" value="true" />
    </context>
  </template>
</templateSet>