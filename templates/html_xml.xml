<templateSet group="html/xml">
  <template name="layout" value="@extends('layouts.app')&#10;&#10;@section('content')&#10;    $END$&#10;@endsection" description="Initial Blade layout" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="HTML" value="true" />
    </context>
  </template>
  <template name="icon" value="&lt;i class=&quot;fas fa-$END$&quot;&gt;&lt;/i&gt;" description="Icon tag with material class" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="HTML" value="true" />
    </context>
  </template>
  <template name="@l" value="@lang('$END$')" description="@lang() shortcut" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="HTML" value="true" />
    </context>
  </template>
  <template name="iselect" value="&lt;i-select v-model=&quot;form.$NAME$&quot;&#10;          :selected=&quot;form.$SELECTED$ ? form.$SELECTED$.id : null&quot;&#10;          name=&quot;$NAME$&quot;&#10;          url=&quot;$URL$s&quot;/&gt;" description="Input for Select" toReformat="false" toShortenFQNames="true">
    <variable name="SELECTED" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="URL" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="true" />
    </context>
  </template>
  <template name="mdf" value="&lt;md-field :class=&quot;getValidationClass('$NAME$')&quot;&gt;&#10;    &lt;label v-text=&quot;trans('validation.attributes.$NAME$')&quot;&gt;&lt;/label&gt;&#10;    &lt;md-input @input=&quot;onInput&quot; name=&quot;$NAME$&quot; id=&quot;$NAME$&quot; v-model=&quot;form.$NAME$&quot;$END$/&gt;&#10;&lt;/md-field&gt;" description="Material Design field of Vue Material" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="true" />
    </context>
  </template>
  <template name="mdc" value="&lt;md-checkbox v-model=&quot;form.$NAME$&quot; id=&quot;$NAME$&quot; name=&quot;$NAME$&quot; @change=&quot;onInput&quot;&gt;&#10;    {{ trans('validation.attributes.$NAME$') }}&#10;&lt;/md-checkbox&gt;" description="Material Design Checkbox of Vue Material" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="true" />
    </context>
  </template>
  <template name="elinput" value="&lt;el-form-item :label=&quot;trans('validation.attributes.$NAME$')&quot; prop=&quot;$NAME$&quot;&gt;&#10;    &lt;el-input v-model=&quot;form.$NAME$&quot;&#10;              @input=&quot;onInput&quot;/&gt;&#10;&lt;/el-form-item&gt;" description="el-input-number element" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="true" />
    </context>
  </template>
  <template name="elnumber" value="&lt;el-form-item :label=&quot;trans('validation.attributes.$NAME$')&quot; prop=&quot;$NAME$&quot;&gt;&#10;    &lt;el-input-number v-model=&quot;form.$NAME$&quot; controls-position=&quot;right&quot; :min=&quot;0&quot; @input=&quot;onInput&quot; :step=&quot;0.1&quot;/&gt;&#10;&lt;/el-form-item&gt;" description="el-input number element" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="true" />
    </context>
  </template>
  <template name="elcheck" value="&lt;el-form-item :label=&quot;trans('validation.attributes.$NAME$')&quot;&gt;&#10;    &lt;el-switch v-model=&quot;form.$NAME$&quot; @input=&quot;onInput&quot;/&gt;&#10;&lt;/el-form-item&gt;" description="el-switch element" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="true" />
    </context>
  </template>
  <template name="eldate" value="&lt;el-form-item :label=&quot;trans('validation.attributes.$NAME$')&quot; prop=&quot;$NAME$&quot;&gt;&#10;    &lt;el-date-picker v-model=&quot;form.$NAME$&quot;&#10;                    value-format=&quot;yyyy-MM-dd&quot;&#10;                    :placeholder=&quot;trans('validation.attributes.$NAME$')&quot;/&gt;&#10;&lt;/el-form-item&gt;" description="el-date-picker element" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="true" />
    </context>
  </template>
  <template name="itext" value="&lt;i-text v-model=&quot;form.$NAME$&quot; &#10;        name=&quot;$NAME$&quot;/&gt;" description="Input for Text" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="true" />
    </context>
  </template>
  <template name="inumber" value="&lt;v-number v-model=&quot;form.$NAME$&quot; &#10;          name=&quot;$NAME$&quot;/&gt;" description="Input for Number" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="true" />
    </context>
  </template>
  <template name="iswitch" value="&lt;i-switch v-model=&quot;form.$NAME$&quot; &#10;          name=&quot;$NAME$&quot;/&gt;" description="Input for Boolean" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="true" />
    </context>
  </template>
  <template name="iauto" value="&lt;i-auto-complete name=&quot;$NAME$&quot;&#10;                 ref=&quot;$NAME$&quot;&#10;                 url=&quot;$URL$&quot;&#10;                 url-attribute=&quot;$NAME$&quot;&#10;                 @input=&quot;onInput($event, '$NAME$')&quot;/&gt;" description="Input for autocemplete" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="URL" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="true" />
    </context>
  </template>
  <template name="ibi" value="&lt;info-block-item :label=&quot;$t('validation.attributes.$ATTRIBUTE$')&quot;&#10;                 :value=&quot;data.$ATTRIBUTE$&quot;/&gt;" description="Info Block Item" toReformat="false" toShortenFQNames="true">
    <variable name="ATTRIBUTE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="true" />
    </context>
  </template>
  <template name="idate" value="&lt;i-date v-model=&quot;form.$NAME$&quot;&#10;        name=&quot;$NAME$&quot;/&gt;" description="Input for Date" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="true" />
    </context>
  </template>
  <template name="ib" value="&lt;info-block :title=&quot;$t('labels.$ATTRIBUTE$')&quot;&gt;&#10;&#10;&lt;/info-block&gt;" description="Info Block" toReformat="false" toShortenFQNames="true">
    <variable name="ATTRIBUTE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="true" />
    </context>
  </template>
  <template name="elform" value="&lt;template&gt;&#10;    &lt;el-form ref=&quot;form&quot; :rules=&quot;rules&quot; :model=&quot;form&quot; label-width=&quot;120px&quot;&gt;&#10;        $END$&#10;    &lt;/el-form&gt;&#10;&lt;/template&gt;&#10;&lt;script&gt;&#10;import FormMixin from '../../mixins/FormMixin';&#10;import rules from './rules/$RULE$Rules';&#10;import vText from './inputs/vText';&#10;&#10;export default {&#10;    components: {vText},&#10;&#10;    mixins: [FormMixin],&#10;&#10;    props: ['data'],&#10;&#10;    data() {&#10;        return {&#10;            form: Object.assign({}, this.data),&#10;            rules: this.buildRules(rules)&#10;        }&#10;    },&#10;&#10;    methods: {&#10;        validate(callback){&#10;            this.$refs['form'].validate(callback);&#10;        }&#10;    }&#10;}&#10;&lt;/script&gt;" description="El form boilderplate" toReformat="false" toShortenFQNames="true">
    <variable name="RULE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="true" />
      <option name="Vue" value="true" />
    </context>
  </template>
  <template name="$t" value="$t('$END$')" description="Vue i18n Translate function" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="HTML" value="true" />
      <option name="Vue" value="true" />
    </context>
  </template>
  <template name="cheader" value="&lt;create-header :title=&quot;$tc('models.$NAME$.$NAME$s', 2)&quot;&#10;               @onCreate=&quot;onCreate&quot;/&gt;" description="Create Header" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="true" />
    </context>
  </template>
  <template name="eheader" value="&lt;edit-header :title=&quot;$tc('models.$NAME$.$NAME$s', 2)&quot;&#10;             @onEdit=&quot;update&quot;/&gt;" description="Create Header" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="true" />
    </context>
  </template>
</templateSet>